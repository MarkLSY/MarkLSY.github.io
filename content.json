{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"Mark LSY","url":"http://yoursite.com"},"pages":[{"title":"404","date":"2018-07-19T13:32:01.000Z","updated":"2018-07-20T07:22:58.414Z","comments":true,"path":"/404.html","permalink":"http://yoursite.com//404.html","excerpt":"","text":""},{"title":"about","date":"2018-07-20T04:13:27.000Z","updated":"2018-07-20T04:13:27.290Z","comments":true,"path":"about/index-1.html","permalink":"http://yoursite.com/about/index-1.html","excerpt":"","text":""},{"title":"about","date":"2018-07-19T13:25:53.000Z","updated":"2018-07-19T13:25:53.284Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"tages","date":"2018-07-20T04:13:38.000Z","updated":"2018-07-20T04:13:38.194Z","comments":true,"path":"tages/index.html","permalink":"http://yoursite.com/tages/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-07-19T13:26:07.000Z","updated":"2018-07-19T13:26:07.507Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"机器学习","slug":"Machine-Learning","date":"2018-08-09T07:33:27.000Z","updated":"2018-08-09T08:24:03.169Z","comments":true,"path":"2018/08/09/Machine-Learning/","link":"","permalink":"http://yoursite.com/2018/08/09/Machine-Learning/","excerpt":"","text":"机器学习流程1.问题设置2.加载示例数据集3.学习和预测4.模型持久化5.规定 机器学习十大算法1.线性回归这种算法常用于在连续变量的基础上估计实际值（房价、呼叫量、总销售额等）。通过在独立变量和依赖变量间拟合一条直线来建立独立变量和依赖变量间的关系。最佳拟合线叫做回归线，可由线性方程Y = a * X + b来表示。 2.逻辑回归逻辑回归一个分类算法而非回归算法。简单来说，这就是通过拟合数据到一个逻辑函数来预测一个事件发生的可能因为他预测的是概率，所以输出变量就在0与1之间。假设你朋友给你个谜题要你解。只有两种结果情形：你要么解出来了，要么没解出来。现在设想，给你出了范围广泛的各种谜题，用来看看你擅长哪些领域。结果最后会是这样：如果你面临的是10年级的三角几何踢，你有70%的概率解出来，如果是5年级的历史题，你答对的概率只有30%。这就是逻辑回归给你提供的回答。 3.决策树决策树算法 是一种主要用于分类问题的监督学习算法。 但是它是个两面身吆，既适用于分类也适用于连续因变量的预测也就是回归，所以通常会说回归树或者分类树。决策树直接看图会有较为直观的了解。可以直接上网搜索一下决策树的图片帮助理解。 4.SVM（支持向量机）这也是一个分类算法。在本算法里，我们将每个数据项画在一个N维空间里（N是数据项的特性数），数据项的每个特性对应一个坐标。例如，假设我们只有两个特性，比如个体的身高和头发长度。我们先将这两个变量画成一个二维空间，空间里的每个点都有一个二维坐标（这些坐标就是支持向量）。 现在，我们要找一条将数据分割成两个不同类别的线。这条线将使得两个类别中离该线最近的的点到该线的距离最大化。 在上面显示的例子里。分割数据成两个不同类别的线是那条黑线。因为这时离线最近的两点（分别来自两个不同类别）到线的距离最大。这条线就是我们的分类器。然后，测试数据落到该线的哪一边，它就被分到哪一类。 5.朴素贝叶斯算法本算法是一个基于假设各个预示变量相互独立时的贝叶斯理论的分类算法。简单来说，朴素贝叶斯分类器假设一个类别中的某特定特性和其他特性不相关。举例来说，一个水果可能被认为是一个苹果，如果它是红色的，圆的，而且直径大概3英寸。即使这些特性彼此相关，或者依赖于其他特性，朴素贝叶斯分类器也会认为所有这些特性在对那水果是苹果的概率的贡献上是相互独立的。 6.KNN算法（K-最近邻算法）这个算法既可以用于分类问题，也可以用于回归问题。然而，在业界常更广泛用于分类问题。KNN算法可以很容易联系到我们的现实生活中来。如果你想了解一个你从来都没有接触过的人，你也许会从他最亲密的朋友，他生活的圈子来获得有关他的信息。 7.K-平均数算法这是一个非监督算法。解决的是分类问题。它采用简单容易的方法将给定数据分成特定数量的簇（假设的K个簇）。在一个簇中的数据点都是同类的，并且都异于其他簇中的点。 8.随机森林算法随机森林是表示决策树集合的标志性名词。在随机森林中，我们有决策树集（也叫作森林）。为了基于新对象的属性来分类该对象，每颗树（针对该对象）都给出了一个分类，我们说这棵树“赞成”该分类。森林选择多数树赞成的分类。每颗树都按以下方式培育：1、如果训练集的案例数是N，那么使用重置随机抽样N次产生一个样本，该样本将会作为决策树的训练集。2、如果有M个输入变量，那就指定一个数m（m&lt;&lt;M）使得对每个节点，m个变量都从M个输入变量中随机选取，而且让这m个变量的分法应用于分类节点。m的值在整个森林生长过程中不变。3、每棵树都长到最大，全程不剪枝。 9.降维算法作为一个数据科学家，提供给我们的数据也包含了很多特征，这听起来对构建健壮模型是个好消息。但其中也存在着挑战。你如何从1000或2000个变量中识别出那些关键的变量呢？在这里，降维算法和其他的像决策树算法，随机森林算法，PCA算法，因子分析法一起，在相关矩阵、缺失值比例等基础上帮我们确定（关键变量）。 10.Gradient Boosting和AdaBoost算法GBM和AdaBoost算法都是boosting算法，用于处理大量数据，作出高精度预测。Boosting是一种聚集算法，它在几个基础估算子的基础上决策，相对于单一估算子，它提高了健壮性。它组合多个弱的或一般的预测器形成一个强预测器。这些boosting算法在数据科学竞赛（像Kaggle，AV Hackathon，CrowdAnalytix）中表现的总是很好。 常用算法如果上网查找机器学习十大常用算法，得到的结果会是大同小异，而目前最流行的或者说应用最广泛的两个算法是SVM（支持向量机）和随机森林算法。","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://yoursite.com/tags/test/"}]},{"title":"CentOS 7 yum 安装 Nginx","slug":"CentOS-7-yum-Nginx","date":"2018-08-07T02:29:01.000Z","updated":"2018-08-07T02:43:41.730Z","comments":true,"path":"2018/08/07/CentOS-7-yum-Nginx/","link":"","permalink":"http://yoursite.com/2018/08/07/CentOS-7-yum-Nginx/","excerpt":"","text":"1.添加Nginx到YUM源 添加CentOS 7 Nginx yum资源库,打开终端,使用以下命令:1sudo rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm 2.安装Nginx 在你的CentOS 7 服务器中使用yum命令从Nginx源服务器中获取来安装Nginx：1sudo yum install -y nginx 3.启动Nginx 刚安装的Nginx不会自行启动。运行Nginx:1sudo systemctl start nginx.service 如果一切进展顺利的话，现在你可以通过你的域名或IP来访问你的Web页面来预览一下Nginx的默认页面；如果看到Welcome to nginx! 页面,那么说明你的CentOS 7 中 web服务器已经正确安装。 CentOS 7 开机启动Nginx1sudo systemctl enable nginx.service Nginx配置信息 网站文件存放默认目录1/usr/share/nginx/html 网站默认站点配置1/etc/nginx/conf.d/default.conf 自定义Nginx站点配置文件存放目录1/etc/nginx/conf.d/ Nginx全局配置1/etc/nginx/nginx.conf Nginx启动1nginx -c nginx.conf","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://yoursite.com/tags/test/"}]},{"title":"nginx-php-mysql之间的联系","slug":"nginx-php-mysql","date":"2018-07-29T03:49:52.000Z","updated":"2018-07-29T04:46:12.930Z","comments":true,"path":"2018/07/29/nginx-php-mysql/","link":"","permalink":"http://yoursite.com/2018/07/29/nginx-php-mysql/","excerpt":"","text":"nginxNginx (engine x是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP服务器。Nginx是由伊戈尔·赛索耶夫为俄罗斯访问量第二的Rambler.ru站点（俄文：Рамблер）开发的，第一个公开版本0.1.0发布于2004年10月4日。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。2011年6月1日，nginx 1.0.4发布。Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并在一个BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力确实在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。 phpPHP（外文名:PHP: Hypertext Preprocessor，中文名：“超文本预处理器”）是一种通用开源脚本语言。语法吸收了C语言、Java和Perl的特点，利于学习，使用广泛，主要适用于Web开发领域。PHP 独特的语法混合了C、Java、Perl以及PHP自创的语法。它可以比CGI或者Perl更快速地执行动态网页。用PHP做出的动态页面与其他的编程语言相比，PHP是将程序嵌入到HTML（标准通用标记语言下的一个应用）文档中去执行，执行效率比完全生成HTML标记的CGI要高许多；PHP还可以执行编译后代码，编译可以达到加密和优化代码运行，使代码运行更快。 mysqlMySQL是一种开放源代码的关系型数据库管理系统（RDBMS），使用最常用的数据库管理语言–结构化查询语言（SQL）进行数据库管理。MySQL是开放源代码的，因此任何人都可以在General Public License的许可下下载并根据个性化的需要对其进行修改。MySQL因为其速度、可靠性和适应性而备受关注。大多数人都认为在不需要事务化处理的情况下，MySQL是管理内容最好的选择。 三者之间的联系大部分网站都有介绍三者之间的联系。在这里我就用最通俗的话来解释一下三者之间到底是怎么紧密结合的。 以一个登陆页面为例：在客户端输入登陆用户名和密码之后，一直在监听端口的nginx（通常监听的是80端口）会立即作出反应，告诉php有用户在客户端登陆了，并把用户输入的信息传给php。php则会利用php代码在MySQL数据库中查找，查找是否有该用户的信息。之后php会将得到的信息再回传给nginx，nginx则对客户端做出相应的回应。如果数据库中有该用户信息，则客户端会显示登陆成功；若数据库中没有该用户信息，则客户端会显示用户名或密码错误。","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://yoursite.com/tags/test/"}]},{"title":"GitHub+Hexo搭建个人网站","slug":"GitHub-Hexo","date":"2018-07-20T08:15:42.000Z","updated":"2018-07-29T03:45:16.277Z","comments":true,"path":"2018/07/20/GitHub-Hexo/","link":"","permalink":"http://yoursite.com/2018/07/20/GitHub-Hexo/","excerpt":"","text":"GitHubGit是什么？Git是目前世界上最先进的分布式版本控制系统（没有之一）。Git有什么特点？简单来说就是：高端大气上档次！Git不但能自动记录每次文件的改动，还可以让同事协作编辑，这样就不用自己管理一堆类似的文件了，也不需要把文件传来传去。 安装git安装git对于我可以说是一个小困难（因为第一次接触）。安装git对于那些英语OK的来说并不困难，只需要上git官网根据提示即可成功安装。如果不懂，可以搜索任何一篇关于git的教程，按照教程流程安装。 常用命令1 . 把文件添加到仓库：1$ git add xxx. xxx指文件名 2 . 把文件提交到仓库：1$ git commit -m \"xxx\" -m后面输入的是本次提交的说明（”xxx”），可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。 3 . 把本地库的内容推送到远程(GitHub)：1$ git push origin master 把本地库的内容推送到远程，用git push命令，实际上是把当前分支master推送到远程。 命令还有很多，这些是比较常用的。其他命令用到的时候可以上网去查，不需要刻意去背命令。 HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 安装安装Hexo前，需要安装Node.js和Git。安装Node.js的最佳方式是使用nvm: 12$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh 安装完成后，重启终端并执行下列命令即可安装Node.js1$ nvm install stable 或者您也可以下载安装程序来安装。下载安装程序安装Node.js时，最好不要安装最新版本，安装推荐大多数用户使用那一版本。 所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo1$ npm install -g hexo-cli 配置建站之后，在_config.yml中可修改大部分的配置。 网站存放在子目录如果您的网站存放在子目录中，例如 http://yoursite.com/blog ， 则需要在_config.yml中将 url 设为 http://yoursite.com/blog并把 root 设为 /blog/。 在开始之前，您必须先在_config.yml中修改参数，一个正确的部署配置中至少要有type参数，例如：12deploy: type: git 常用命令init1$ hexo init [folder] 新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。 new1$ hexo new [layout] &lt;title&gt; 新建一篇文章。如果没有设置 layout 的话，默认使用_config.yml中的default_layout参数代替。如果标题包含空格的话，请使用引号括起来。 1$ hexo new [layout] &lt;title&gt; 你可以执行该条命令来创建一篇新文章。 generate1$ hexo generate 生成静态文件。 deploy1$ hexo deploy 部署网站 上边两条命令可以简写为：1$ hexo g -d 表示生成文件之后立即部署网站。 server1$ hexo server 启动服务器。默认情况下，访问网址为： http://localhost:4000/。 主题创建 Hexo 主题非常容易，您只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改_config.yml内的theme设定，即可切换主题。 每个主题都会给出详细的具体操作流程。在您选定主题后，根据流程即可成功切换主题。","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://yoursite.com/tags/test/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-07-19T02:51:39.510Z","updated":"2018-07-20T11:00:09.762Z","comments":true,"path":"2018/07/19/hello-world/","link":"","permalink":"http://yoursite.com/2018/07/19/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}