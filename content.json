{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"Mark LSY","url":"http://yoursite.com"},"pages":[{"title":"404","date":"2018-07-19T13:32:01.000Z","updated":"2018-07-20T07:22:58.414Z","comments":true,"path":"/404.html","permalink":"http://yoursite.com//404.html","excerpt":"","text":""},{"title":"about","date":"2018-07-19T13:25:53.000Z","updated":"2018-07-19T13:25:53.284Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"about","date":"2018-07-20T04:13:27.000Z","updated":"2018-07-20T04:13:27.290Z","comments":true,"path":"about/index-1.html","permalink":"http://yoursite.com/about/index-1.html","excerpt":"","text":""},{"title":"tags","date":"2018-07-19T13:26:07.000Z","updated":"2018-07-19T13:26:07.507Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"tages","date":"2018-07-20T04:13:38.000Z","updated":"2018-07-20T04:13:38.194Z","comments":true,"path":"tages/index.html","permalink":"http://yoursite.com/tages/index.html","excerpt":"","text":""}],"posts":[{"title":"nginx-php-mysql之间的联系","slug":"nginx-php-mysql","date":"2018-07-29T03:49:52.000Z","updated":"2018-07-29T04:46:12.930Z","comments":true,"path":"2018/07/29/nginx-php-mysql/","link":"","permalink":"http://yoursite.com/2018/07/29/nginx-php-mysql/","excerpt":"","text":"nginxNginx (engine x是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP服务器。Nginx是由伊戈尔·赛索耶夫为俄罗斯访问量第二的Rambler.ru站点（俄文：Рамблер）开发的，第一个公开版本0.1.0发布于2004年10月4日。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。2011年6月1日，nginx 1.0.4发布。Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并在一个BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力确实在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。 phpPHP（外文名:PHP: Hypertext Preprocessor，中文名：“超文本预处理器”）是一种通用开源脚本语言。语法吸收了C语言、Java和Perl的特点，利于学习，使用广泛，主要适用于Web开发领域。PHP 独特的语法混合了C、Java、Perl以及PHP自创的语法。它可以比CGI或者Perl更快速地执行动态网页。用PHP做出的动态页面与其他的编程语言相比，PHP是将程序嵌入到HTML（标准通用标记语言下的一个应用）文档中去执行，执行效率比完全生成HTML标记的CGI要高许多；PHP还可以执行编译后代码，编译可以达到加密和优化代码运行，使代码运行更快。 mysqlMySQL是一种开放源代码的关系型数据库管理系统（RDBMS），使用最常用的数据库管理语言–结构化查询语言（SQL）进行数据库管理。MySQL是开放源代码的，因此任何人都可以在General Public License的许可下下载并根据个性化的需要对其进行修改。MySQL因为其速度、可靠性和适应性而备受关注。大多数人都认为在不需要事务化处理的情况下，MySQL是管理内容最好的选择。 三者之间的联系大部分网站都有介绍三者之间的联系。在这里我就用最通俗的话来解释一下三者之间到底是怎么紧密结合的。 以一个登陆页面为例：在客户端输入登陆用户名和密码之后，一直在监听端口的nginx（通常监听的是80端口）会立即作出反应，告诉php有用户在客户端登陆了，并把用户输入的信息传给php。php则会利用php代码在MySQL数据库中查找，查找是否有该用户的信息。之后php会将得到的信息再回传给nginx，nginx则对客户端做出相应的回应。如果数据库中有该用户信息，则客户端会显示登陆成功；若数据库中没有该用户信息，则客户端会显示用户名或密码错误。","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://yoursite.com/tags/test/"}]},{"title":"GitHub+Hexo搭建个人网站","slug":"GitHub-Hexo","date":"2018-07-20T08:15:42.000Z","updated":"2018-07-29T03:45:16.277Z","comments":true,"path":"2018/07/20/GitHub-Hexo/","link":"","permalink":"http://yoursite.com/2018/07/20/GitHub-Hexo/","excerpt":"","text":"GitHubGit是什么？Git是目前世界上最先进的分布式版本控制系统（没有之一）。Git有什么特点？简单来说就是：高端大气上档次！Git不但能自动记录每次文件的改动，还可以让同事协作编辑，这样就不用自己管理一堆类似的文件了，也不需要把文件传来传去。 安装git安装git对于我可以说是一个小困难（因为第一次接触）。安装git对于那些英语OK的来说并不困难，只需要上git官网根据提示即可成功安装。如果不懂，可以搜索任何一篇关于git的教程，按照教程流程安装。 常用命令1 . 把文件添加到仓库：1$ git add xxx. xxx指文件名 2 . 把文件提交到仓库：1$ git commit -m \"xxx\" -m后面输入的是本次提交的说明（”xxx”），可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。 3 . 把本地库的内容推送到远程(GitHub)：1$ git push origin master 把本地库的内容推送到远程，用git push命令，实际上是把当前分支master推送到远程。 命令还有很多，这些是比较常用的。其他命令用到的时候可以上网去查，不需要刻意去背命令。 HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 安装安装Hexo前，需要安装Node.js和Git。安装Node.js的最佳方式是使用nvm: 12$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh 安装完成后，重启终端并执行下列命令即可安装Node.js1$ nvm install stable 或者您也可以下载安装程序来安装。下载安装程序安装Node.js时，最好不要安装最新版本，安装推荐大多数用户使用那一版本。 所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo1$ npm install -g hexo-cli 配置建站之后，在_config.yml中可修改大部分的配置。 网站存放在子目录如果您的网站存放在子目录中，例如 http://yoursite.com/blog ， 则需要在_config.yml中将 url 设为 http://yoursite.com/blog并把 root 设为 /blog/。 在开始之前，您必须先在_config.yml中修改参数，一个正确的部署配置中至少要有type参数，例如：12deploy: type: git 常用命令init1$ hexo init [folder] 新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。 new1$ hexo new [layout] &lt;title&gt; 新建一篇文章。如果没有设置 layout 的话，默认使用_config.yml中的default_layout参数代替。如果标题包含空格的话，请使用引号括起来。 1$ hexo new [layout] &lt;title&gt; 你可以执行该条命令来创建一篇新文章。 generate1$ hexo generate 生成静态文件。 deploy1$ hexo deploy 部署网站 上边两条命令可以简写为：1$ hexo g -d 表示生成文件之后立即部署网站。 server1$ hexo server 启动服务器。默认情况下，访问网址为： http://localhost:4000/。 主题创建 Hexo 主题非常容易，您只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改_config.yml内的theme设定，即可切换主题。 每个主题都会给出详细的具体操作流程。在您选定主题后，根据流程即可成功切换主题。","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://yoursite.com/tags/test/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-07-19T02:51:39.510Z","updated":"2018-07-20T11:00:09.762Z","comments":true,"path":"2018/07/19/hello-world/","link":"","permalink":"http://yoursite.com/2018/07/19/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}